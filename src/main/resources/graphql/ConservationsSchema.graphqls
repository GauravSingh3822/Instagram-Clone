type Conversions {
    uuid: ID!
    senderId: ID!
    receiverId: ID!
    lastMessageAt: String!
    message: String!
    sentAt: String!
    readAt: String!
    isRead: Boolean!
    deletedAt: String!
    isDeleted: Boolean!
    isSaved: Boolean!
    isLiked: Boolean!
    isBookmarked: Boolean!

}
type ConversionResponse{

    senderId: ID!
    receiverId: ID!
    lastMessageAt: String!
    message: String!
    sentAt: String!
    readAt: String!
    isRead: Boolean!
    deletedAt: String!
    isDeleted: Boolean!
    isSaved: Boolean!
    isLiked: Boolean!
    isBookmarked: Boolean!
}
input ConversionInput{

    senderId: ID!
    receiverId: ID!
    lastMessageAt: String!
    message: String!
    sentAt: String!
    readAt: String!
    isRead: Boolean!
    deletedAt: String!
    isDeleted: Boolean!
    isSaved: Boolean!
    isLiked: Boolean!
    isBookmarked: Boolean!
}
extend type Query{
    getConversionById(uuid: ID!): Conversions
    getAllConversions: [Conversions]
    getConversionsBySenderId(senderId: ID!): [Conversions]
    getConversionsByReceiverId(receiverId: ID!): [Conversions]
}
extend type Mutation{
    createConversion(input: ConversionInput!): ConversionResponse
    updateConversion(uuid: ID!, input: ConversionInput!): ConversionResponse
    deleteConversion(uuid: ID!): ConversionResponse
}
